/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Allisson Castro
 */
public class Inventario extends javax.swing.JFrame {

    /**
     * Creates new form Inventario
     */
     @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("componentes/LOGOSAG(2).png"));
        return retValue;
    }
    
    public Inventario() {
        initComponents();
        cargartabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonRegresarI = new javax.swing.JLabel();
        txtBuscarI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaInventario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonRegresarI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresarI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegresarIMouseClicked(evt);
            }
        });
        getContentPane().add(botonRegresarI, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 130, 40));

        txtBuscarI.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtBuscarI.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscarI.setText("Buscar por ID,Nombre");
        txtBuscarI.setBorder(null);
        txtBuscarI.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtBuscarI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarIFocusLost(evt);
            }
        });
        txtBuscarI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarIKeyTyped(evt);
            }
        });
        getContentPane().add(txtBuscarI, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 225, 240, 31));

        TablaInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID ", "Nombre Producto", "Existencia Inicial ", "Entradas", "Salidas", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TablaInventario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 900, 390));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Inventario.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarIFocusGained
        if (txtBuscarI.getText().equals("Buscar por ID,Nombre")) {
            txtBuscarI.setText("");
            txtBuscarI.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_txtBuscarIFocusGained
    }
    private void txtBuscarIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarIFocusLost
        if (txtBuscarI.getText().equals("")) {
            txtBuscarI.setText("Buscar por ID,Nombre");
            txtBuscarI.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtBuscarIFocusLost

    private void txtBuscarIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarIKeyTyped
        buscarData(txtBuscarI.getText());
        validarNumerosLetras(evt);
        if (txtBuscarI.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "El máximo de caracteres es de 15 para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtBuscarI.getText().length() > 0) {
            if (!txtBuscarI.getText().matches("^(?!.*([A-Za-zñÑáéíóúÁÉÍÓÚ\\s])\\1{2})[A-Za-zñÑáéíóúÁÉÍÓÚ\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }

    public void validarNumerosLetras(java.awt.event.KeyEvent e) {
        if (e.getKeyChar() >= 33 && e.getKeyChar() <= 47
                || e.getKeyChar() >= 58 && e.getKeyChar() <= 64
                || e.getKeyChar() >= 91 && e.getKeyChar() <= 96
                || e.getKeyChar() >= 123 && e.getKeyChar() <= 129
                || e.getKeyChar() >= 145 && e.getKeyChar() <= 159
                || e.getKeyChar() >= 164 && e.getKeyChar() <= 238) {

            e.consume();
            JOptionPane.showMessageDialog(null, "Este campo no acepta caracteres especiales", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_txtBuscarIKeyTyped

    private void botonRegresarIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegresarIMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_botonRegresarIMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaInventario;
    private javax.swing.JLabel botonRegresarI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscarI;
    // End of variables declaration//GEN-END:variables

    private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaInventario.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT I.Id_inventario,P.Nombre_Producto,I.[Existencia Inicial],I.Entradas,I.Salidas,I.Stock \n"
                    + "FROM Inventario AS I\n"
                    + "INNER JOIN Productos AS P ON I.Id_Producto = P.Id_Producto\n"
                    + "ORDER BY I.Id_inventario");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                    System.out.println(fila[indice]);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    void buscarData(String valor) {
        String[] titulos = {"ID", "Nombre Producto", "Existencia Inicial", "Entradas", "Salidas", "Stock"};
        String[] registros = new String[13];
        String sql = "SELECT I.Id_inventario,P.Nombre_Producto,I.[Existencia Inicial],I.Entradas,I.Salidas,I.Stock\n"
                + "FROM Inventario AS I\n"
                + "INNER JOIN Productos AS P ON I.Id_Producto = P.Id_Producto\n"
                + "WHERE CONCAT (I.Id_inventario, ' ', P.Nombre_Producto) LIKE '%" + valor + "%'\n"
                + "ORDER BY I.Id_inventario";

        DefaultTableModel model = new DefaultTableModel(null, titulos);
        Connection con = Conexion.getConexion();

        try {

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("Id_inventario");
                registros[1] = rs.getString("Nombre_Producto");
                registros[2] = rs.getString("Existencia Inicial");
                registros[3] = rs.getString("Entradas");
                registros[4] = rs.getString("Salidas");
                registros[5] = rs.getString("Stock");
                model.addRow(registros);
            }

            TablaInventario.setModel(model);
            // anchoColumnas();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
