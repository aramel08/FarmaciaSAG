/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carba
 */
public class PrecioHistoricoProducto extends javax.swing.JFrame {

    /**
     * Creates new form PrecioHistoricoProducto
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("componentes/LOGOSAG(2).png"));
        return retValue;
    }
    public PrecioHistoricoProducto() {
        initComponents();
        txtId_Pro.setText(Productos.Id_Producto);
        cargartabla();
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DAY_OF_WEEK, +5);
        Date max = cal.getTime();
        Date min = new Date();
        FechaFinalPH.setSelectableDateRange(min, max);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupPH = new javax.swing.ButtonGroup();
        lbfechaentrega = new javax.swing.JLabel();
        lbfechacompra = new javax.swing.JLabel();
        txtId_Pro = new javax.swing.JLabel();
        BotonRegresarPH = new javax.swing.JLabel();
        BotonAgregarPH = new javax.swing.JLabel();
        BotonEditarPH = new javax.swing.JLabel();
        BotonCancelarPH = new javax.swing.JLabel();
        txtIdPH = new javax.swing.JLabel();
        ComboIdProductoPH = new javax.swing.JComboBox<>();
        txtPrecioPH = new javax.swing.JTextField();
        txtId_PrecioHistorico = new javax.swing.JLabel();
        txtBuscarPH = new javax.swing.JTextField();
        BotonGuardarPH = new javax.swing.JLabel();
        FechaInicioPH = new com.toedter.calendar.JDateChooser();
        FechaFinalPH = new com.toedter.calendar.JDateChooser();
        BotonActivoPH = new javax.swing.JRadioButton();
        BotonInactivoPH = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPrecioHistorico = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbfechaentrega.setBackground(new java.awt.Color(255, 255, 255));
        lbfechaentrega.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbfechaentrega.setForeground(new java.awt.Color(153, 153, 153));
        lbfechaentrega.setText("Fecha Finalización");
        lbfechaentrega.setToolTipText("");
        lbfechaentrega.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(lbfechaentrega, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, 150, 20));

        lbfechacompra.setBackground(new java.awt.Color(255, 255, 255));
        lbfechacompra.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        lbfechacompra.setForeground(new java.awt.Color(153, 153, 153));
        lbfechacompra.setText("Fecha de Inicio");
        lbfechacompra.setToolTipText("");
        lbfechacompra.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(lbfechacompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 170, 30));
        getContentPane().add(txtId_Pro, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 20, 40));

        BotonRegresarPH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonRegresarPHMouseClicked(evt);
            }
        });
        getContentPane().add(BotonRegresarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 120, 30));

        BotonAgregarPH.setEnabled(false);
        BotonAgregarPH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonAgregarPHMouseClicked(evt);
            }
        });
        getContentPane().add(BotonAgregarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 120, 30));

        BotonEditarPH.setEnabled(false);
        BotonEditarPH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonEditarPHMouseClicked(evt);
            }
        });
        getContentPane().add(BotonEditarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 120, 120, 30));
        getContentPane().add(BotonCancelarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 120, 30));
        getContentPane().add(txtIdPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 40, 20));

        ComboIdProductoPH.setBackground(new java.awt.Color(240, 240, 240));
        ComboIdProductoPH.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        ComboIdProductoPH.setForeground(new java.awt.Color(153, 153, 153));
        ComboIdProductoPH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Id Producto" }));
        ComboIdProductoPH.setBorder(null);
        ComboIdProductoPH.setEnabled(false);
        ComboIdProductoPH.setOpaque(false);
        getContentPane().add(ComboIdProductoPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 314, 182, 28));

        txtPrecioPH.setBackground(new java.awt.Color(240, 240, 240));
        txtPrecioPH.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtPrecioPH.setForeground(new java.awt.Color(153, 153, 153));
        txtPrecioPH.setText("Ingrese Precio del producto");
        txtPrecioPH.setBorder(null);
        txtPrecioPH.setEnabled(false);
        txtPrecioPH.setOpaque(false);
        getContentPane().add(txtPrecioPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 500, 180, 28));
        getContentPane().add(txtId_PrecioHistorico, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 100, 20));

        txtBuscarPH.setBackground(new java.awt.Color(240, 240, 240));
        txtBuscarPH.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtBuscarPH.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscarPH.setText("Buscar por Id Precio Histórico");
        txtBuscarPH.setBorder(null);
        txtBuscarPH.setOpaque(false);
        txtBuscarPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarPHActionPerformed(evt);
            }
        });
        getContentPane().add(txtBuscarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 200, 235, 28));

        BotonGuardarPH.setEnabled(false);
        BotonGuardarPH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonGuardarPHMouseClicked(evt);
            }
        });
        getContentPane().add(BotonGuardarPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 120, 110, 30));

        FechaInicioPH.setEnabled(false);
        getContentPane().add(FechaInicioPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 376, 182, 28));

        FechaFinalPH.setEnabled(false);
        getContentPane().add(FechaFinalPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 439, 182, 28));

        buttonGroupPH.add(BotonActivoPH);
        BotonActivoPH.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        BotonActivoPH.setForeground(new java.awt.Color(255, 255, 255));
        BotonActivoPH.setText("Activo");
        BotonActivoPH.setOpaque(false);
        BotonActivoPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActivoPHActionPerformed(evt);
            }
        });
        getContentPane().add(BotonActivoPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, -1, -1));

        buttonGroupPH.add(BotonInactivoPH);
        BotonInactivoPH.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        BotonInactivoPH.setForeground(new java.awt.Color(255, 255, 255));
        BotonInactivoPH.setText("Inactivo");
        BotonInactivoPH.setOpaque(false);
        BotonInactivoPH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInactivoPHActionPerformed(evt);
            }
        });
        getContentPane().add(BotonInactivoPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, -1, -1));

        TablaPrecioHistorico.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        TablaPrecioHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Precio Historico", "ID Producto", "Fecha Inicio", "Fecha Final", "Precio del producto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaPrecioHistorico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPrecioHistoricoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPrecioHistorico);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 570, 290));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Precio Historico.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 940, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarPHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarPHActionPerformed

    private void BotonActivoPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActivoPHActionPerformed
        
    }//GEN-LAST:event_BotonActivoPHActionPerformed

    private void BotonInactivoPHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInactivoPHActionPerformed
        
    }//GEN-LAST:event_BotonInactivoPHActionPerformed

    private void BotonRegresarPHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonRegresarPHMouseClicked
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_BotonRegresarPHMouseClicked

    private void TablaPrecioHistoricoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPrecioHistoricoMouseClicked
         try {
            int fila = TablaPrecioHistorico.getSelectedRow();
            int id = Integer.parseInt(TablaPrecioHistorico.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select PH.Id_Precio_Historico, P.Nombre_Producto, PH.Fecha_Incio,PH.Fecha_Finalizacion,PH.Precio\n"
                    + "From PrecioHistorico as PH\n"
                    + "INNER JOIN Productos AS P ON PH.Id_Producto = P.Id_Producto\n"
                    + "Where PH.Id_Precio_Historico=?\n"
                    + "Order By PH.Id_Precio_Historico");

            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {

                txtIdPH.setText(String.valueOf(id));
                ComboIdProductoPH.setSelectedItem(rs.getString("Nombre_Producto"));
                FechaInicioPH.setDate(rs.getDate("Fecha_Incio"));
                FechaFinalPH.setDate(rs.getDate("Fecha_Finalizacion"));
                txtPrecioPH.setText(rs.getString("Precio"));
                
                System.out.println(id);

            }

           FechaFinalPH.setEnabled(Boolean.TRUE);
           BotonEditarPH.setEnabled(Boolean.TRUE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_TablaPrecioHistoricoMouseClicked

    private void BotonEditarPHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEditarPHMouseClicked
         if (BotonAgregarPH.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Seleccione un registro para editar", "Advertencia", JOptionPane.WARNING_MESSAGE);

        } else {
        int IdPrecio = Integer.parseInt(txtIdPH.getText());

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String FechaF = sdf.format(FechaFinalPH.getDate());

            try {
                Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement("Update PrecioHistorico set Fecha_Finalizacion=? Where Id_Precio_Historico=?");
                ps.setString(1, FechaF);
                ps.setInt(2, IdPrecio);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Registro Actualizado");
                cargartabla();
                FechaFinalPH.setEnabled(Boolean.FALSE);


            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.toString());

            }
        }
        
        
    }//GEN-LAST:event_BotonEditarPHMouseClicked

    private void BotonAgregarPHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonAgregarPHMouseClicked
        if (BotonAgregarPH.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Los campos han sido cargados previamente no se puede agregar solo editar", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_BotonAgregarPHMouseClicked

    private void BotonGuardarPHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonGuardarPHMouseClicked
        if (BotonAgregarPH.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Los campos han sido cargados previamente no se puede guardar solo editar", "Advertencia", JOptionPane.WARNING_MESSAGE);

        } 
    }//GEN-LAST:event_BotonGuardarPHMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrecioHistoricoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrecioHistoricoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrecioHistoricoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrecioHistoricoProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrecioHistoricoProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BotonActivoPH;
    private javax.swing.JLabel BotonAgregarPH;
    private javax.swing.JLabel BotonCancelarPH;
    private javax.swing.JLabel BotonEditarPH;
    private javax.swing.JLabel BotonGuardarPH;
    private javax.swing.JRadioButton BotonInactivoPH;
    private javax.swing.JLabel BotonRegresarPH;
    private javax.swing.JComboBox<String> ComboIdProductoPH;
    private com.toedter.calendar.JDateChooser FechaFinalPH;
    private com.toedter.calendar.JDateChooser FechaInicioPH;
    private javax.swing.JTable TablaPrecioHistorico;
    private javax.swing.ButtonGroup buttonGroupPH;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbfechacompra;
    private javax.swing.JLabel lbfechaentrega;
    private javax.swing.JTextField txtBuscarPH;
    private javax.swing.JLabel txtIdPH;
    private javax.swing.JLabel txtId_PrecioHistorico;
    private javax.swing.JLabel txtId_Pro;
    private javax.swing.JTextField txtPrecioPH;
    // End of variables declaration//GEN-END:variables
private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaPrecioHistorico.getModel();
        modeloTabla.setRowCount(0);
        int idpro= Integer.parseInt(txtId_Pro.getText());

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select PH.Id_Precio_Historico, P.Nombre_Producto, PH.Fecha_Incio,PH.Fecha_Finalizacion,PH.Precio\n"
                    + "From PrecioHistorico as PH\n"
                    + "INNER JOIN Productos AS P ON PH.Id_Producto = P.Id_Producto\n"
                    + "Where P.Id_Producto=?\n"
                    + "Order By PH.Id_Precio_Historico");
            ps.setInt(1, idpro);
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }

}
