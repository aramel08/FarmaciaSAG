package Formularios_SAG;

import Conexion.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Allisson Castro
 */
public class Operaciones extends javax.swing.JFrame {

    /**
     * Creates new form Operaciones
     */
    public Operaciones() {
        initComponents();
        CargarSucursal cs = new Operaciones.CargarSucursal();
        ComboSucursal.setModel(cs.getvalues());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIdC = new javax.swing.JLabel();
        txtIdS = new javax.swing.JLabel();
        txtIdO = new javax.swing.JLabel();
        txtIdE = new javax.swing.JLabel();
        ComboSucursal = new javax.swing.JComboBox<>();
        TablaO = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtHoraF = new javax.swing.JTextField();
        txtHoraI = new javax.swing.JTextField();
        txtFechaO = new com.toedter.calendar.JDateChooser();
        ComboE = new javax.swing.JComboBox<>();
        ComboCajaO = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtIdC, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 30, 20));
        getContentPane().add(txtIdS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 30, 20));
        getContentPane().add(txtIdO, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 30, 20));
        getContentPane().add(txtIdE, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 40, 20));

        ComboSucursal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboSucursalItemStateChanged(evt);
            }
        });
        getContentPane().add(ComboSucursal, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 190, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sucursal", "ID Operaciones", "Caja", "Empleado", "Fecha", "Hora Inicio", "Hora FinalizaciÃ³n"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaO.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(TablaO, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 610, 390));

        txtHoraF.setText("jTextField1");
        txtHoraF.setBorder(null);
        txtHoraF.setOpaque(false);
        getContentPane().add(txtHoraF, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, 190, 30));

        txtHoraI.setText("jTextField1");
        txtHoraI.setBorder(null);
        txtHoraI.setOpaque(false);
        getContentPane().add(txtHoraI, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 190, 30));
        getContentPane().add(txtFechaO, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 190, 30));

        ComboE.setBorder(null);
        getContentPane().add(ComboE, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 190, 30));

        ComboCajaO.setBorder(null);
        getContentPane().add(ComboCajaO, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 190, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Operaciones(1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ComboSucursalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboSucursalItemStateChanged
        ObtenerIdS();
        CargarE ce = new Operaciones.CargarE();
        ComboE.setModel(ce.getvalues());
        CargarCaja cc = new Operaciones.CargarCaja();
        ComboCajaO.setModel(cc.getvalues());


    }//GEN-LAST:event_ComboSucursalItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Operaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Operaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Operaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Operaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Operaciones().setVisible(true);
            }
        });
    }

    public class CargarE {

        public DefaultComboBoxModel getvalues() {
            int Surc = Integer.parseInt(txtIdS.getText());
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            try {
                ResultSet rs;
                Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement("select NombreE from Empleados where Id_Sucursal=?");
                ps.setInt(1, Surc);
                rs = ps.executeQuery();
                modelo.addElement("Seleccione Empleado...");
                while (rs.next()) {
                    modelo.addElement(rs.getString(1));
                }
                con.close();
                rs.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            return modelo;
        }
    }

    public class CargarSucursal {

        public DefaultComboBoxModel getvalues() {

            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            try {
                Connection con = Conexion.getConexion();
                String sql = "select Nombre from Sucursal";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                modelo.addElement("Seleccione Sucursal...");
                while (rs.next()) {
                    modelo.addElement(rs.getString(1));
                }
                con.close();
                rs.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            return modelo;
        }

    }

    public class CargarCaja {

        public DefaultComboBoxModel getvalues() {
            int Surc = Integer.parseInt(txtIdS.getText());
            // int Cj = Integer.parseInt(txtIdS.getText());
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            try {
                ResultSet rs;
                Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement("Select Num_Caja from Caja where Id_Sucursal=?");
                ps.setInt(1, Surc);
                rs = ps.executeQuery();
                modelo.addElement("Seleccione Caja");
                while (rs.next()) {
                    modelo.addElement(rs.getString(1));
                }
                con.close();
                rs.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            return modelo;
        }
    }

    public void ObtenerIdE() {
        String Nombre = ComboE.getSelectedItem().toString();
        try {
            ResultSet rs;
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Select Id_Empleado From Empleados Where NombreE=?");
            ps.setString(1, Nombre);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtIdE.setText(rs.getString("Id_Empleado"));
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void ObtenerIdC() {
        String Nombre = ComboCajaO.getSelectedItem().toString();
        try {
            ResultSet rs;
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Select Id_Caja From Caja Where Num_Caja=?");
            ps.setString(1, Nombre);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtIdC.setText(rs.getString("Id_Caja"));
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void ObtenerIdS() {
        String Nombre = ComboSucursal.getSelectedItem().toString();
        try {
            ResultSet rs;
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Select Id_Sucursal From Sucursal Where Nombre=?");
            ps.setString(1, Nombre);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtIdS.setText(rs.getString("Id_Sucursal"));
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboCajaO;
    private javax.swing.JComboBox<String> ComboE;
    private javax.swing.JComboBox<String> ComboSucursal;
    private javax.swing.JScrollPane TablaO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jTable1;
    private com.toedter.calendar.JDateChooser txtFechaO;
    private javax.swing.JTextField txtHoraF;
    private javax.swing.JTextField txtHoraI;
    private javax.swing.JLabel txtIdC;
    private javax.swing.JLabel txtIdE;
    private javax.swing.JLabel txtIdO;
    private javax.swing.JLabel txtIdS;
    // End of variables declaration//GEN-END:variables
}
