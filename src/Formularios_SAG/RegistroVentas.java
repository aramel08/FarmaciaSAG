/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Allisson Castro
 */
public class RegistroVentas extends javax.swing.JFrame {

    /**
     * Creates new form RegistroVentas
     */
    public RegistroVentas() {
        initComponents();
        anchoColumnas();
        cargartabla();
    }

    void anchoColumnas() {
        TableColumnModel anchoColumnas = TablaDEVenta.getColumnModel();
        anchoColumnas.getColumn(0).setPreferredWidth(50);
        anchoColumnas.getColumn(1).setPreferredWidth(200);
        anchoColumnas.getColumn(2).setPreferredWidth(150);
        anchoColumnas.getColumn(3).setPreferredWidth(250);
        anchoColumnas.getColumn(4).setPreferredWidth(150);
        anchoColumnas.getColumn(5).setPreferredWidth(150);
        anchoColumnas.getColumn(6).setPreferredWidth(150);

        TableColumnModel anchoColumna = TablaDTV.getColumnModel();
        anchoColumna.getColumn(0).setPreferredWidth(50);
        anchoColumna.getColumn(1).setPreferredWidth(200);
        anchoColumna.getColumn(2).setPreferredWidth(150);
        anchoColumna.getColumn(3).setPreferredWidth(150);
        anchoColumna.getColumn(4).setPreferredWidth(150);
        anchoColumna.getColumn(5).setPreferredWidth(150);
        anchoColumna.getColumn(6).setPreferredWidth(150);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtRegresarV = new javax.swing.JLabel();
        barraEmpleado = new javax.swing.JScrollPane();
        TablaDEVenta = new javax.swing.JTable();
        barraEmpleado1 = new javax.swing.JScrollPane();
        TablaDTV = new javax.swing.JTable();
        txtBuscarV = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(txtRegresarV, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 56, 160, 40));

        TablaDEVenta.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        TablaDEVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Número de Factura", "Fecha de emisión", "CAI", "Cliente", "Empleado", "Tipo de Pago"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaDEVenta.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TablaDEVenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TablaDEVenta.setRowHeight(30);
        TablaDEVenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDEVentaMouseClicked(evt);
            }
        });
        barraEmpleado.setViewportView(TablaDEVenta);

        getContentPane().add(barraEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 1110, 160));

        TablaDTV.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        TablaDTV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Número de Factura", "Producto", "Costo Unitario", "Cantidad", "Descuento", "Impuesto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaDTV.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        TablaDTV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TablaDTV.setRowHeight(30);
        TablaDTV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDTVMouseClicked(evt);
            }
        });
        barraEmpleado1.setViewportView(TablaDTV);

        getContentPane().add(barraEmpleado1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, 1110, 160));

        txtBuscarV.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtBuscarV.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscarV.setText("Buscar");
        getContentPane().add(txtBuscarV, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 145, 290, 35));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Ventas.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaDEVentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDEVentaMouseClicked
        barraEmpleado1.setVisible(true);
        TablaDTV.setVisible(true);
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaDTV.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            int filaw = TablaDEVenta.getSelectedRow();
            int id = Integer.parseInt(TablaDEVenta.getValueAt(filaw, 0).toString());

            Connection con = Conexion.getConexion();

            ps = con.prepareStatement("Select DF.Id_Detalle_Factura, F.Num_Factura, P.Nombre_Producto, DF.Precio_Unitario,DF.Cantidad,DF.Descuento, DF.Impuesto\n"
                    + "From DetalleFactura as DF \n"
                    + "Inner Join Factura AS F ON DF.Id_Factura=F.Id_Factura\n"
                    + "Inner Join Productos as P ON DF.Id_Producto=P.Id_Producto\n"
                    + "WHERE F.Id_Factura=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);

                }

                modeloTabla.addRow(fila);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }//GEN-LAST:event_TablaDEVentaMouseClicked

    private void TablaDTVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDTVMouseClicked

    }//GEN-LAST:event_TablaDTVMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaDEVenta;
    private javax.swing.JTable TablaDTV;
    private javax.swing.JScrollPane barraEmpleado;
    private javax.swing.JScrollPane barraEmpleado1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtBuscarV;
    private javax.swing.JLabel txtRegresarV;
    // End of variables declaration//GEN-END:variables

    private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaDEVenta.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select F.Id_Factura, F.Num_Factura,F.Fecha_Factura,PF.CAI,Concat(C.Nombre_Cliente,' ',C.Apellido_Cliente)AS NombreC,E.NombreE, TP.Tipo_Pago\n"
                    + "from Factura as F\n"
                    + "Inner Join Cliente as C on F.Id_Cliente=F.Id_Cliente\n"
                    + "Inner Join Parametro_Factura as PF ON F.Id_Tipo_Pago=PF.Id_Parametro_Factura\n"
                    + "Inner Join Descuento_Factura as DF ON F.Id_Factura=DF.Id_Factura\n"
                    + "Inner Join Tipo_Pago AS TP ON F.Id_Tipo_Pago=TP.Id_Tipo_Pago\n"
                    + "Inner Join Empleados as E ON F.Id_Empleado =E.Id_Empleado\n"
                    + "Order by F.Id_Factura");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }

                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }

}
