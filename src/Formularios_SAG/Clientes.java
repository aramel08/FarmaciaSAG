/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Allisson Castro
 */
public class Clientes extends javax.swing.JFrame {

    /**
     * Creates new form Clientes
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("componentes/LOGOSAG(2).png"));
        return retValue;
    }

    public Clientes() {
        initComponents();
        Cargarg ch = new Cargarg();
        comboGenero.setModel(ch.getvalues());
        cargartabla();
        txtIdC.setVisible(Boolean.FALSE);
        BotonActivoC.setVisible(Boolean.FALSE);
        BotonInactivoC.setVisible(Boolean.FALSE);
    }

    void verificarDatosExistentes(String campo, String columna, String tabla, String mensaje) {
        Conexion cc = new Conexion();
        Connection cn = cc.getConexion();
        String sql = "SELECT " + columna + " FROM " + tabla + " WHERE " + columna + " = '" + campo + "'";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            if (rs.next()) {
                if (rs.getString(columna).equals(campo)) {
                    JOptionPane.showMessageDialog(null, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo verificar\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        grupoBotonClientes = new javax.swing.ButtonGroup();
        txtRTN = new javax.swing.JTextField();
        txtNombreC = new javax.swing.JTextField();
        txtApellidoC = new javax.swing.JTextField();
        comboGenero = new javax.swing.JComboBox<>();
        txtDireccionC = new javax.swing.JTextField();
        txtTelefonoC = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBuscarC = new javax.swing.JTextField();
        botonAgregarC = new javax.swing.JLabel();
        botonEditarC = new javax.swing.JLabel();
        botonGuardarC = new javax.swing.JLabel();
        botonCancelarC = new javax.swing.JLabel();
        botonBuscarC = new javax.swing.JLabel();
        botonRegresarC = new javax.swing.JLabel();
        tablaClientes = new javax.swing.JScrollPane();
        tablaCliente = new javax.swing.JTable();
        BotonInactivoC = new javax.swing.JRadioButton();
        txtFechaNac = new com.toedter.calendar.JDateChooser();
        BotonActivoC = new javax.swing.JRadioButton();
        txtEstadoC = new javax.swing.JLabel();
        txtGeneroC = new javax.swing.JLabel();
        txtFechaRegistro = new com.toedter.calendar.JDateChooser();
        txtIdC = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1000, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtRTN.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtRTN.setForeground(new java.awt.Color(153, 153, 153));
        txtRTN.setText("Ingrese RTN");
        txtRTN.setBorder(null);
        txtRTN.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtRTN.setEnabled(false);
        txtRTN.setOpaque(false);
        txtRTN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRTNFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRTNFocusLost(evt);
            }
        });
        txtRTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtRTNMousePressed(evt);
            }
        });
        txtRTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRTNActionPerformed(evt);
            }
        });
        txtRTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRTNKeyTyped(evt);
            }
        });
        getContentPane().add(txtRTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 282, 200, 30));

        txtNombreC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtNombreC.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreC.setText("Ingrese Nombre");
        txtNombreC.setBorder(null);
        txtNombreC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtNombreC.setEnabled(false);
        txtNombreC.setOpaque(false);
        txtNombreC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreCFocusLost(evt);
            }
        });
        txtNombreC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreCMousePressed(evt);
            }
        });
        txtNombreC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCActionPerformed(evt);
            }
        });
        txtNombreC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreCKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombreC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 200, 30));

        txtApellidoC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtApellidoC.setForeground(new java.awt.Color(153, 153, 153));
        txtApellidoC.setText("Ingrese Apellido");
        txtApellidoC.setBorder(null);
        txtApellidoC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtApellidoC.setEnabled(false);
        txtApellidoC.setOpaque(false);
        txtApellidoC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtApellidoCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoCFocusLost(evt);
            }
        });
        txtApellidoC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtApellidoCMousePressed(evt);
            }
        });
        txtApellidoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoCActionPerformed(evt);
            }
        });
        txtApellidoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoCKeyTyped(evt);
            }
        });
        getContentPane().add(txtApellidoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 200, 30));

        comboGenero.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        comboGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione g√©nero..." }));
        comboGenero.setToolTipText("");
        comboGenero.setBorder(null);
        comboGenero.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboGenero.setEnabled(false);
        comboGenero.setOpaque(false);
        comboGenero.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                comboGeneroMousePressed(evt);
            }
        });
        comboGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGeneroActionPerformed(evt);
            }
        });
        getContentPane().add(comboGenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 200, 30));

        txtDireccionC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtDireccionC.setForeground(new java.awt.Color(153, 153, 153));
        txtDireccionC.setText("Ingrese Direcci√≥n");
        txtDireccionC.setBorder(null);
        txtDireccionC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDireccionC.setEnabled(false);
        txtDireccionC.setOpaque(false);
        txtDireccionC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionCFocusLost(evt);
            }
        });
        txtDireccionC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDireccionCMousePressed(evt);
            }
        });
        txtDireccionC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionCActionPerformed(evt);
            }
        });
        txtDireccionC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionCKeyTyped(evt);
            }
        });
        getContentPane().add(txtDireccionC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, 200, 30));

        txtTelefonoC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtTelefonoC.setForeground(new java.awt.Color(153, 153, 153));
        txtTelefonoC.setText("Ingrese Tel√©fono");
        txtTelefonoC.setBorder(null);
        txtTelefonoC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtTelefonoC.setEnabled(false);
        txtTelefonoC.setOpaque(false);
        txtTelefonoC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoCFocusLost(evt);
            }
        });
        txtTelefonoC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTelefonoCMousePressed(evt);
            }
        });
        txtTelefonoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoCActionPerformed(evt);
            }
        });
        txtTelefonoC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefonoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 575, 200, 30));

        txtEmail.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(153, 153, 153));
        txtEmail.setText("Ingrese E-mail");
        txtEmail.setBorder(null);
        txtEmail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtEmail.setEnabled(false);
        txtEmail.setOpaque(false);
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtEmailMousePressed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 620, 200, 30));

        txtBuscarC.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        txtBuscarC.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscarC.setText("Buscar ID , Nombre o RTN");
        txtBuscarC.setBorder(null);
        txtBuscarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtBuscarC.setOpaque(false);
        txtBuscarC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarCFocusLost(evt);
            }
        });
        txtBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarCActionPerformed(evt);
            }
        });
        txtBuscarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarCKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarCKeyTyped(evt);
            }
        });
        getContentPane().add(txtBuscarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 250, 30));

        botonAgregarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonAgregarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonAgregarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 130, 40));

        botonEditarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEditarC.setEnabled(false);
        botonEditarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonEditarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonEditarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 150, 120, 40));

        botonGuardarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonGuardarC.setEnabled(false);
        botonGuardarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonGuardarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonGuardarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 150, 130, 40));

        botonCancelarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCancelarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonCancelarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonCancelarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 150, 130, 40));

        botonBuscarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonBuscarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonBuscarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 280, 30, 40));

        botonRegresarC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonRegresarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonRegresarCMouseClicked(evt);
            }
        });
        getContentPane().add(botonRegresarC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 130, 40));

        tablaCliente.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        tablaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellido", "RTN", "Tel√©fono", "G√©nero", "Fecha Nacimiento", "Direcci√≥n", "E-mail", "Fecha Registro", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablaCliente.setRowHeight(30);
        tablaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClienteMouseClicked(evt);
            }
        });
        tablaClientes.setViewportView(tablaCliente);

        getContentPane().add(tablaClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 710, 400));

        grupoBotonClientes.add(BotonInactivoC);
        BotonInactivoC.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        BotonInactivoC.setText("Inactivo");
        BotonInactivoC.setOpaque(false);
        BotonInactivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInactivoCActionPerformed(evt);
            }
        });
        getContentPane().add(BotonInactivoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 250, -1, -1));

        txtFechaNac.setOpaque(false);
        getContentPane().add(txtFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 200, 30));

        grupoBotonClientes.add(BotonActivoC);
        BotonActivoC.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        BotonActivoC.setText("Activo");
        BotonActivoC.setOpaque(false);
        BotonActivoC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActivoCActionPerformed(evt);
            }
        });
        getContentPane().add(BotonActivoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, -1, -1));

        txtEstadoC.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        txtEstadoC.setText("Estado");
        getContentPane().add(txtEstadoC, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 70, 20));
        getContentPane().add(txtGeneroC, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 120, 30));

        txtFechaRegistro.setOpaque(false);
        getContentPane().add(txtFechaRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 665, 200, 30));

        txtIdC.setEnabled(false);
        getContentPane().add(txtIdC, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 30, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Clientes.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1010, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtApellidoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCActionPerformed

    private void txtTelefonoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoCActionPerformed

    private void txtNombreCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCActionPerformed

    private void comboGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGeneroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboGeneroActionPerformed

    private void txtRTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRTNActionPerformed

    private void txtBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarCActionPerformed

    private void botonAgregarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonAgregarCMouseClicked
        Habillitar();
        botonGuardarC.setEnabled(Boolean.TRUE);
    }//GEN-LAST:event_botonAgregarCMouseClicked

    private void botonEditarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonEditarCMouseClicked
        int Id = Integer.parseInt(txtIdC.getText());
        String RTN = txtRTN.getText();
        String Nombre = txtNombreC.getText();
        String Apellido = txtApellidoC.getText();
        int Genero = comboGenero.getSelectedIndex();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String FechaNac = sdf.format(txtFechaNac.getDate());
        String Direccion = txtDireccionC.getText();
        String Telefono = txtTelefonoC.getText();
        String Email = txtEmail.getText();
        String FechaRegistro = sdf.format(txtFechaRegistro.getDate());
        String Estado = "";

        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Cliente set Nombre_Cliente=?,Apellido_Cliente=?,RTN=?,Telefono=?, Id_Genero=?,Direccion=?,Fecha_Nacimiento=?,[E-mail]=?,Fecha_Registro=? Where Id_Cliente=?");
            ps.setString(3, RTN);
            ps.setString(1, Nombre);
            ps.setString(2, Apellido);
            ps.setInt(5, Genero);
            ps.setString(7, FechaNac);
            ps.setString(6, Direccion);
            ps.setInt(4, Integer.valueOf(Telefono));
            ps.setString(8, Email);
            ps.setString(9, FechaRegistro);
            ps.setInt(10, Id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Actualizado");
            cargartabla();
            Limpiar();
            Inhabillitar();
            txtEstadoC.setVisible(Boolean.FALSE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_botonEditarCMouseClicked
       private void botonGuardarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonGuardarCMouseClicked
        if(botonGuardarC.isEnabled()){
            if (txtNombreC.getText().equals("Ingrese Nombre") || txtTelefonoC.getText().equals("Ingrese Tel√©fono") || txtDireccionC.getText().equals("Ingrese Direcci√≥n") || txtEmail.getText().equals("Ingrese E-mail")
                   || txtApellidoC.getText().equals("Ingrese Apellido") || txtRTN.getText().equals("Ingrese RTN") || comboGenero.getSelectedItem().equals("Seleccione G√©nero...")) {
               if (txtRTN.getText().equals("Ingrese RTN")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar un RTN");
               } else if (txtNombreC.getText().equals("Ingrese Nombre")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar un Nombre");
               } else if (txtApellidoC.getText().equals("Ingrese Apellido")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar Apellido");
               } else if (comboGenero.getSelectedItem().equals("Seleccione G√©nero...")) {
                   JOptionPane.showMessageDialog(null, "Seleccione Femenino o Masculino");
               } else if (txtFechaNac.getDateFormatString().equals("")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar Fecha Nacimiento");
               } else if (txtDireccionC.getText().equals("Ingrese Direcci√≥n")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar una Direcci√≥n");
               } else if (txtTelefonoC.getText().equals("Ingrese Tel√©fono")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar un Tel√©fono");
               } else if (txtEmail.getText().equals("Ingrese E-mail")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar E-mail");
               } else if (txtFechaRegistro.getDateFormatString().equals("")) {
                   JOptionPane.showMessageDialog(null, "Debe ingresar Fecha Registro");
               }
           } else {
               String RTN = txtRTN.getText();
               String Nombre = txtNombreC.getText();
               String Apellido = txtApellidoC.getText();
               int Genero = comboGenero.getSelectedIndex() + 1;
               SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
               String FechaNac = sdf.format(txtFechaNac.getDate());
               String Direccion = txtDireccionC.getText();
               String Telefono = txtTelefonoC.getText();
               String Email = txtEmail.getText();
               String FechaRegistro = sdf.format(txtFechaRegistro.getDate());
               try {
                   Connection con = Conexion.getConexion();
                   PreparedStatement ps = con.prepareStatement("Insert into Cliente(Nombre_Cliente, Apellido_Cliente, RTN,Telefono,Id_Genero,Direccion,Fecha_Nacimiento,[E-mail],Fecha_Registro,Id_Estado) VALUES(?,?,?,?,?,?,?,?,?,?)");
                   ps.setString(1, Nombre);
                   ps.setString(2, Apellido);
                   ps.setString(3, RTN);
                   ps.setInt(5, Genero);
                   ps.setString(7, FechaNac);
                   ps.setString(6, Direccion);
                   ps.setInt(4, Integer.valueOf(Telefono));
                   ps.setString(8, Email);
                   ps.setString(9, FechaRegistro);
                   ps.setInt(10, 1);
                   ps.executeUpdate();
                   JOptionPane.showMessageDialog(null, "Registro guardado");
                   cargartabla();
                   Limpiar();
                   Inhabillitar();

               } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, ex.toString());
               }
           }
        }else{
            JOptionPane.showMessageDialog(null, "Debe dar click en agregar para guardar");
        }
           
    }//GEN-LAST:event_botonGuardarCMouseClicked

    private void botonCancelarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonCancelarCMouseClicked
        Limpiar();
        Inhabillitar();
    }//GEN-LAST:event_botonCancelarCMouseClicked

    private void botonBuscarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonBuscarCMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_botonBuscarCMouseClicked

    private void botonRegresarCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonRegresarCMouseClicked
        
        if(Factura.regresar.equals("1")){
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factura().setVisible(true);
            }
        });
        this.dispose(); 
        }else{
          java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
        this.dispose();  
        }
        
        
    }//GEN-LAST:event_botonRegresarCMouseClicked

    private void tablaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClienteMouseClicked
        // //TODO add your handling code here:

        try {
            int fila = tablaCliente.getSelectedRow();
            int id = Integer.parseInt(tablaCliente.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT C.Nombre_Cliente,C.Apellido_Cliente,C.RTN,C.Telefono,G.Genero,C.Fecha_Nacimiento,C.Direccion,C.[E-mail],C.Fecha_Registro,C.Id_Estado \n"
                    + "FROM Cliente AS C\n"
                    + "INNER JOIN Genero AS G ON C.Id_Genero = G.Id_Genero\n"
                    + "INNER JOIN Estado AS E ON C.Id_Estado = E.Id_Estado\n"
                    + "Where C.Id_Cliente=?\n"
                    + "ORDER BY C.Id_Cliente");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtIdC.setText(String.valueOf(id));
                txtNombreC.setText(rs.getString("Nombre_Cliente"));
                txtApellidoC.setText(rs.getString("Apellido_Cliente"));
                txtRTN.setText(rs.getString("RTN"));
                txtTelefonoC.setText(rs.getString("Telefono"));
                comboGenero.setSelectedItem(rs.getString("Genero"));
                txtFechaNac.setDate(rs.getDate("Fecha_Nacimiento"));
                txtDireccionC.setText(rs.getString("Direccion"));
                txtEmail.setText(rs.getString("E-mail"));
                txtFechaRegistro.setDate(rs.getDate("Fecha_Registro"));

                if (rs.getString("Id_Estado").equals("1")) {
                    BotonActivoC.setSelected(true);
                } else if (rs.getString("Id_Estado").equals("2")) {
                    BotonInactivoC.setSelected(true);
                }
            }
            BotonInactivoC.setVisible(Boolean.TRUE);
            BotonActivoC.setVisible(Boolean.TRUE);
            botonEditarC.setVisible(Boolean.TRUE);
            botonGuardarC.setVisible(Boolean.FALSE);
            botonAgregarC.setVisible(Boolean.TRUE);
            Habillitar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }


    }//GEN-LAST:event_tablaClienteMouseClicked

    private void BotonActivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActivoCActionPerformed
        int Id = Integer.parseInt(txtIdC.getText());

        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Cliente set Id_Estado=? Where Id_Cliente=?");
            ps.setInt(1, 1);
            ps.setInt(2, Id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Habilitado");
            cargartabla();
            Limpiar();
            Inhabillitar();
            txtEstadoC.setVisible(Boolean.FALSE);
            BotonActivoC.setVisible(Boolean.FALSE);
            BotonInactivoC.setVisible(Boolean.FALSE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_BotonActivoCActionPerformed

    private void BotonInactivoCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInactivoCActionPerformed
        int Id = Integer.parseInt(txtIdC.getText());

        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Cliente set Id_Estado=? Where Id_Cliente=?");
            ps.setInt(1, 2);
            ps.setInt(2, Id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Inhabilitado");
            cargartabla();
            Limpiar();
            Inhabillitar();
            txtEstadoC.setVisible(Boolean.FALSE);
            BotonActivoC.setVisible(Boolean.FALSE);
            BotonInactivoC.setVisible(Boolean.FALSE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }//GEN-LAST:event_BotonInactivoCActionPerformed

    private void txtBuscarCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCKeyPressed
        buscarData(txtBuscarC.getText());
    }//GEN-LAST:event_txtBuscarCKeyPressed

    private void txtNombreCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreCMousePressed
        if (txtNombreC.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtNombreCMousePressed

    public void validarNumerosLetras(java.awt.event.KeyEvent e) {
        if (e.getKeyChar() >= 33 && e.getKeyChar() <= 47
                || e.getKeyChar() >= 58 && e.getKeyChar() <= 64
                || e.getKeyChar() >= 91 && e.getKeyChar() <= 96
                || e.getKeyChar() >= 123 && e.getKeyChar() <= 129
                || e.getKeyChar() >= 145 && e.getKeyChar() <= 159
                || e.getKeyChar() >= 164 && e.getKeyChar() <= 238) {

            e.consume();
            JOptionPane.showMessageDialog(null, "Este campo no acepta caracteres especiales", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void txtBuscarCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarCKeyTyped
        buscarData(txtBuscarC.getText());
        validarNumerosLetras(evt);
        if (txtBuscarC.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el m√°ximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtBuscarC.getText().length() > 0) {
            if (!txtBuscarC.getText().matches("^(?!.*([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\1{2})[A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Advertencia", JOptionPane.WARNING_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtBuscarCKeyTyped

    private void txtRTNFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRTNFocusGained
        if (txtRTN.getText().equals("Ingrese RTN")) {
            txtRTN.setText("");
            txtRTN.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtRTNFocusGained

    private void txtRTNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRTNFocusLost
        if (txtRTN.getText().equals("")) {
            txtRTN.setText("Ingrese RTN");
            txtRTN.setForeground(new Color(153, 153, 153));
        } else if (txtRTN.getText().length() < 14) {
            JOptionPane.showMessageDialog(null, "El documento RTN debe contener 14 d√≠gitos", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            verificarDatosExistentes(txtRTN.getText(), "RTN", "Cliente", "No puedes utilizar el RTN de otro Cliente");
        }
    }//GEN-LAST:event_txtRTNFocusLost

    private void txtNombreCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreCFocusGained
        if (txtNombreC.getText().equals("Ingrese Nombre")) {
            txtNombreC.setText("");
            txtNombreC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtNombreCFocusGained

    private void txtNombreCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreCFocusLost
        if (txtNombreC.getText().equals("")) {
            txtNombreC.setText("Ingrese Nombre");
            txtNombreC.setForeground(new Color(153, 153, 153));
        } else if (!txtNombreC.getText().isEmpty()) {
            if (!txtNombreC.getText().matches("^[A-Z-√Å√â√ç√ì√ö√ë]{1}[a-z-√°√©√≠√≥√∫√±]+$")) {
                JOptionPane.showMessageDialog(null, "Debes escribir un nombre comenzando en may√∫scula. No utilice espacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtNombreCFocusLost

    private void txtApellidoCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoCFocusGained
        if (txtApellidoC.getText().equals("Ingrese Apellido")) {
            txtApellidoC.setText("");
            txtApellidoC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtApellidoCFocusGained

    private void txtApellidoCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoCFocusLost
        if (txtApellidoC.getText().equals("")) {
            txtApellidoC.setText("Ingrese Apellido");
            txtApellidoC.setForeground(new Color(153, 153, 153));
        } else if (!txtApellidoC.getText().isEmpty()) {
            if (!txtApellidoC.getText().matches("^[A-Z-√Å√â√ç√ì√ö√ë]{1}[a-z-√°√©√≠√≥√∫√±]+$")) {
                JOptionPane.showMessageDialog(null, "Debe escribir el apellido comenzando en may√∫scula. No utilice espacios", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtApellidoCFocusLost

    private void txtDireccionCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionCFocusGained
        if (txtDireccionC.getText().equals("Ingrese Direcci√≥n")) {
            txtDireccionC.setText("");
            txtDireccionC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtDireccionCFocusGained

    private void txtDireccionCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionCActionPerformed

    }//GEN-LAST:event_txtDireccionCActionPerformed

    private void txtTelefonoCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCFocusGained
        if (txtTelefonoC.getText().equals("Ingrese Tel√©fono")) {
            txtTelefonoC.setText("");
            txtTelefonoC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtTelefonoCFocusGained

    private void txtTelefonoCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCFocusLost
        if (txtTelefonoC.getText().equals("")) {
            txtTelefonoC.setText("Ingrese Tel√©fono");
            txtTelefonoC.setForeground(new Color(153, 153, 153));
        } else if (txtTelefonoC.getText().length() < 8) {
            JOptionPane.showMessageDialog(null, "El n√∫mero de tel√©fono debe contener 8 d√≠gitos", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!txtTelefonoC.getText().matches("(^[9]{1}[0-9]{7}$)|(^[3]{1}[0-9]{7}$)|(^[7]{1}[0-9]{7}$)")) {
            JOptionPane.showMessageDialog(null, "El n√∫mero de celular debe comenzar en 9, 3 o 7", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            verificarDatosExistentes(txtTelefonoC.getText(), "Telefono", "Cliente", "El  n√∫mero de telefono ya existe");
        }
    }//GEN-LAST:event_txtTelefonoCFocusLost

    private void txtDireccionCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionCFocusLost
        if (txtDireccionC.getText().equals("")) {
            txtDireccionC.setText("Ingrese Direcci√≥n");
            txtDireccionC.setForeground(new Color(153, 153, 153));
        }
        if (txtDireccionC.getText().length() < 10) {
            JOptionPane.showMessageDialog(null, "La direcci√≥n debe contener al menos 10 caracteres", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtDireccionCFocusLost

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        if (txtEmail.getText().equals("Ingrese E-mail")) {
            txtEmail.setText("");
            txtEmail.setForeground(new Color(0, 0, 0));
        }

    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (txtEmail.getText().equals("")) {
            txtEmail.setText("Ingrese E-mail");
            txtEmail.setForeground(new Color(153, 153, 153));
        } else if (!txtEmail.getText().matches("^(.+[@]{1}[a-z]+[.]{1}[a-z]+)$|^(.+[@]{1}[a-z]+[.]{1}[a-z]+[.]{1}[a-z]+)$")) {
            JOptionPane.showMessageDialog(null, "Debe escribir un correo v√°lido ¬¥\nEjemplo: farmaciasag@gmail.com", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            verificarDatosExistentes(txtEmail.getText(), "E-mail", "Cliente", "No puedes utilizar el E-mail de otro Cliente");
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtBuscarCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarCFocusGained
        if (txtBuscarC.getText().equals("Buscar ID , Nombre o RTN")) {
            txtBuscarC.setText("");
            txtBuscarC.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtBuscarCFocusGained

    private void txtBuscarCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarCFocusLost
        if (txtBuscarC.getText().equals("")) {
            txtBuscarC.setText("Buscar ID , Nombre o RTN");
            txtBuscarC.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtBuscarCFocusLost
    public boolean validarNumCelular(String cadena) {
        String patron = "^[23789]\\d{7}$";
        Pattern patt = Pattern.compile(patron);
        Matcher comparador = patt.matcher(cadena);
        if (comparador.matches()) {
            return true;
        } else {
            return false;
        }
    }

    private void txtTelefonoCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCKeyTyped
        validarNumeros(evt);
        if (txtTelefonoC.getText().length() > 7) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoCKeyTyped

    public void validarNumeros(java.awt.event.KeyEvent e) {
        if (e.getKeyChar() >= 33 && e.getKeyChar() <= 47
                || e.getKeyChar() >= 58 && e.getKeyChar() <= 238) {
            e.consume();
            JOptionPane.showMessageDialog(null, "Este campo solo admite n√∫meros", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void txtRTNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRTNKeyTyped
        validarNumeros(evt);
        if (txtRTN.getText().length() > 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txtRTNKeyTyped

    private void txtNombreCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreCKeyTyped
        if (txtNombreC.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el m√°ximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtNombreC.getText().length() > 0) {
            if (!txtNombreC.getText().matches("^(?!.*([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\1{2})[A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtNombreCKeyTyped

    private void txtApellidoCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoCKeyTyped
        if (txtNombreC.getText().length() > 12) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el m√°ximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtNombreC.getText().length() > 0) {
            if (!txtNombreC.getText().matches("^(?!.*([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\1{2})[A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtApellidoCKeyTyped

    private void txtDireccionCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionCKeyTyped
        if (txtDireccionC.getText().length() > 25) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el m√°ximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtDireccionC.getText().length() > 0) {
            if (!txtDireccionC.getText().matches("^(?!.*([A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s])\\1{2})[A-Za-z√±√ë√°√©√≠√≥√∫√Å√â√ç√ì√ö\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtDireccionCKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        if (txtEmail.getText().length() > 30) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el m√°ximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtEmail.getText().length() > 15) {
            if (!txtEmail.getText().matches("^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*)")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error ", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtRTNMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRTNMousePressed
        if (txtRTN.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtRTNMousePressed

    private void txtApellidoCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtApellidoCMousePressed
        if (txtApellidoC.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtApellidoCMousePressed

    private void txtDireccionCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionCMousePressed
        if (txtDireccionC.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtDireccionCMousePressed

    private void txtTelefonoCMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoCMousePressed
        if (txtTelefonoC.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtTelefonoCMousePressed

    private void txtEmailMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEmailMousePressed
        if (txtEmail.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtEmailMousePressed

    private void comboGeneroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboGeneroMousePressed
        if (comboGenero.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_comboGeneroMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BotonActivoC;
    private javax.swing.JRadioButton BotonInactivoC;
    private javax.swing.JLabel botonAgregarC;
    private javax.swing.JLabel botonBuscarC;
    private javax.swing.JLabel botonCancelarC;
    private javax.swing.JLabel botonEditarC;
    private javax.swing.JLabel botonGuardarC;
    private javax.swing.JLabel botonRegresarC;
    private javax.swing.JComboBox<String> comboGenero;
    private javax.swing.ButtonGroup grupoBotonClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTable tablaCliente;
    private javax.swing.JScrollPane tablaClientes;
    private javax.swing.JTextField txtApellidoC;
    private javax.swing.JTextField txtBuscarC;
    private javax.swing.JTextField txtDireccionC;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JLabel txtEstadoC;
    private com.toedter.calendar.JDateChooser txtFechaNac;
    private com.toedter.calendar.JDateChooser txtFechaRegistro;
    private javax.swing.JLabel txtGeneroC;
    private javax.swing.JLabel txtIdC;
    private javax.swing.JTextField txtNombreC;
    private javax.swing.JTextField txtRTN;
    private javax.swing.JTextField txtTelefonoC;
    // End of variables declaration//GEN-END:variables

    private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaCliente.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("SELECT C.Id_Cliente,C.Nombre_Cliente,C.Apellido_Cliente,C.RTN,C.Telefono,G.Genero,C.Fecha_Nacimiento,C.Direccion,C.[E-mail],C.Fecha_Registro,E.Estado \n"
                    + "FROM Cliente AS C\n"
                    + "INNER JOIN Genero AS G ON C.Id_Genero = G.Id_Genero\n"
                    + "INNER JOIN Estado AS E ON C.Id_Estado = E.Id_Estado\n"
                    + "ORDER BY C.Id_Cliente");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                    System.out.println(fila[indice]);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    private void Habillitar() {

        txtRTN.enable(Boolean.TRUE);
        txtNombreC.enable(Boolean.TRUE);
        txtApellidoC.enable(Boolean.TRUE);
        txtDireccionC.enable(Boolean.TRUE);
        txtEmail.enable(Boolean.TRUE);
        txtFechaNac.enable(Boolean.TRUE);
        txtTelefonoC.enable(Boolean.TRUE);
        txtFechaRegistro.enable(Boolean.TRUE);
        comboGenero.enable(Boolean.TRUE);
    }

    private void Inhabillitar() {

        txtRTN.enable(Boolean.FALSE);
        txtNombreC.enable(Boolean.FALSE);
        txtApellidoC.enable(Boolean.FALSE);
        txtDireccionC.enable(Boolean.FALSE);
        txtEmail.enable(Boolean.FALSE);
        txtFechaNac.enable(Boolean.FALSE);
        txtTelefonoC.enable(Boolean.FALSE);
        txtFechaRegistro.enable(Boolean.FALSE);
        comboGenero.enable(Boolean.FALSE);
    }

    private void Limpiar() {

        txtIdC.setText("");
        txtRTN.setText("");
        if (txtRTN.getText().equals("")) {
            txtRTN.setText("Ingrese RTN");
            txtRTN.setForeground(new Color(153, 153, 153));
        }

        txtNombreC.setText("");
        if (txtNombreC.getText().equals("")) {
            txtNombreC.setText("Ingrese Nombre");
            txtNombreC.setForeground(new Color(153, 153, 153));
        }

        txtApellidoC.setText("");
        if (txtApellidoC.getText().equals("")) {
            txtApellidoC.setText("Ingrese Apellido");
            txtApellidoC.setForeground(new Color(153, 153, 153));
        }

        comboGenero.setSelectedIndex(0);

        txtDireccionC.setText("");
        if (txtDireccionC.getText().equals("")) {
            txtDireccionC.setText("Ingrese Direcci√≥n");
            txtDireccionC.setForeground(new Color(153, 153, 153));
        }

        txtTelefonoC.setText("");
        if (txtTelefonoC.getText().equals("")) {
            txtTelefonoC.setText("Ingrese Telefono");
            txtTelefonoC.setForeground(new Color(153, 153, 153));
        }

        txtEmail.setText("");
        if (txtEmail.getText().equals("")) {
            txtEmail.setText("Ingrese E-mail");
            txtEmail.setForeground(new Color(153, 153, 153));
        }

        //txtFechaRegistro.setText("");
        BotonActivoC.setVisible(Boolean.FALSE);
        BotonInactivoC.setVisible(Boolean.FALSE);
        txtEstadoC.setVisible(Boolean.FALSE);
    }

    public class Cargarg {

        public DefaultComboBoxModel getvalues() {

            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
            try {
                Connection con = Conexion.getConexion();
                String sql = "select Genero from Genero";
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(sql);
                modelo.addElement("Seleccione G√©nero...");
                while (rs.next()) {
                    modelo.addElement(rs.getString(1));
                }
                con.close();
                rs.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            return modelo;
        }
    }

    void buscarData(String valor) {
        String[] titulos = {"ID", "Nombre", "Apellido", "RTN", "Telefono", "Genero", "Fecha de Nacimiento", "Direccion", "Email", "Fecha Registro", "Estado"};
        String[] registros = new String[13];
        String sql = "SELECT C.Nombre_Cliente,C.Apellido_Cliente,C.RTN,C.Telefono,G.Genero,C.Fecha_Nacimiento,C.Direccion,C.[E-mail],C.Fecha_Registro,C.Id_Estado \n"
                + "FROM Cliente AS C\n"
                + "INNER JOIN Genero AS G ON C.Id_Genero = G.Id_Genero\n"
                + "INNER JOIN Estado AS E ON C.Id_Estado = E.Id_Estado\n"
                + "WHERE CONCAT (C.Id_Cliente, ' ', C.Nombre_Cliente, ' ', C.RTN) LIKE '%" + valor + "%'\n"
                + "ORDER BY C.Id_Cliente";

        DefaultTableModel model = new DefaultTableModel(null, titulos);
        Connection con = Conexion.getConexion();

        try {

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("Id_Cliente");
                registros[1] = rs.getString("Nombre_Cliente");
                registros[2] = rs.getString("Apellido_Cliente");
                registros[3] = rs.getString("RTN");
                registros[4] = rs.getString("Telefono");
                registros[5] = rs.getString("Id_Genero");
                registros[6] = rs.getString("Fecha_Nacimiento");
                registros[7] = rs.getString("Direccion");
                registros[8] = rs.getString("E-mail");
                registros[9] = rs.getString("Fecha_Registro");
                registros[10] = rs.getString("Id_Estado");
                model.addRow(registros);
            }

            tablaCliente.setModel(model);
            // anchoColumnas();
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
