package Formularios_SAG;

import Conexion.Conexion;
import Formularios_SAG.Factura;
import Formularios_SAG.RegistroVentas;
import static Formularios_SAG.RegistroVentas.TablaDEVenta;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author arame
 */
public class ReporteVenta extends javax.swing.JFrame {

    /**
     * Creates new form ReporteVenta
     */
    public int Id = 0;
    public Double descuento = 0.00;
    public Double total = 0.00;
    public Double descuentito = 0.00;

    public ReporteVenta() {
        initComponents();
        int fila = RegistroVentas.TablaDEVenta.getSelectedRow();
        Id = Integer.parseInt(RegistroVentas.TablaDEVenta.getValueAt(fila, 0).toString());
        cargartabla();
        cargarotros();
        ObtenerTotales();
        ObtenerDescuento();
        Double CDescuento = descuento + descuentito;
        Double Totalito = total - CDescuento;
        Descuento.setText("L. " + new DecimalFormat("####.00").format(CDescuento));
        Total.setText("L. " + new DecimalFormat("####.00").format(Totalito));
        System.out.println(CDescuento);
        System.out.println(Totalito);
        imprimir();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Total = new javax.swing.JLabel();
        Descuento = new javax.swing.JLabel();
        LIMITE = new javax.swing.JLabel();
        ISV = new javax.swing.JLabel();
        subtotal = new javax.swing.JLabel();
        RTN = new javax.swing.JLabel();
        Hora = new javax.swing.JLabel();
        TipoPago = new javax.swing.JLabel();
        Cliente = new javax.swing.JLabel();
        emision = new javax.swing.JLabel();
        Vendedor = new javax.swing.JLabel();
        Direccion = new javax.swing.JLabel();
        telefono = new javax.swing.JLabel();
        RANGO = new javax.swing.JLabel();
        RANGO1 = new javax.swing.JLabel();
        NFACT = new javax.swing.JLabel();
        CAI = new javax.swing.JLabel();
        telefono1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabladetalle = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Total.setText("jLabel15");
        jPanel1.add(Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 900, 140, -1));

        Descuento.setText("jLabel14");
        jPanel1.add(Descuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 860, 210, -1));

        LIMITE.setText("jLabel5");
        jPanel1.add(LIMITE, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 190, 180, 20));

        ISV.setText("jLabel13");
        jPanel1.add(ISV, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 820, 250, -1));

        subtotal.setText("jLabel12");
        jPanel1.add(subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 780, 170, 20));

        RTN.setText("jLabel11");
        jPanel1.add(RTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, 240, -1));

        Hora.setText("jLabel9");
        jPanel1.add(Hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 210, 20));

        TipoPago.setText("jLabel10");
        jPanel1.add(TipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, 170, -1));

        Cliente.setText("jLabel8");
        jPanel1.add(Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 220, 20));

        emision.setText("jLabel7");
        jPanel1.add(emision, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 230, 30));

        Vendedor.setText("jLabel6");
        jPanel1.add(Vendedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, 250, 30));

        Direccion.setText("jLabel2");
        jPanel1.add(Direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 270, 40));

        telefono.setText("jLabel2");
        jPanel1.add(telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 180, 30));

        RANGO.setText("jLabel2");
        jPanel1.add(RANGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, 190, -1));

        RANGO1.setText("jLabel2");
        jPanel1.add(RANGO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 185, 190, -1));

        NFACT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NFACT.setText("jLabel3");
        jPanel1.add(NFACT, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 380, 30));

        CAI.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CAI.setText("jLabel2");
        jPanel1.add(CAI, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 50, 380, 30));

        telefono1.setText("RTN: 0801-1995-002145");
        jPanel1.add(telefono1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 180, 30));

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 90, 90));

        tabladetalle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabladetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cantidad", "Descripci√≥n", "Precio Unitario", "Importe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabladetalle);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 960, 360));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/ReporteFactura(4)(4).png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 940));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 940));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReporteVenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CAI;
    private javax.swing.JLabel Cliente;
    private javax.swing.JLabel Descuento;
    private javax.swing.JLabel Direccion;
    private javax.swing.JLabel Hora;
    private javax.swing.JLabel ISV;
    private javax.swing.JLabel LIMITE;
    private javax.swing.JLabel NFACT;
    private javax.swing.JLabel RANGO;
    private javax.swing.JLabel RANGO1;
    private javax.swing.JLabel RTN;
    private javax.swing.JLabel TipoPago;
    private javax.swing.JLabel Total;
    private javax.swing.JLabel Vendedor;
    private javax.swing.JLabel emision;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel subtotal;
    private javax.swing.JTable tabladetalle;
    private javax.swing.JLabel telefono;
    private javax.swing.JLabel telefono1;
    // End of variables declaration//GEN-END:variables
private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tabladetalle.getModel();
        modeloTabla.setRowCount(0);
        //int id = Integer.valueOf(Factura.idFactura.getText());
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select DF.Cantidad, P.Nombre_Producto,DF.Precio_Unitario,( DF.Cantidad*DF.Precio_Unitario) AS Total\n"
                    + "From DetalleFactura as DF\n"
                    + "Inner Join Productos as P On DF.Id_Producto=P.Id_Producto\n"
                    + "Where DF.Id_Factura=?");
            ps.setInt(1, Id);
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);

                }

                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void cargarotros() {
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;

        try {

            Connection con = Conexion.getConexion();

            ps = con.prepareStatement("Select  F.Num_Factura,F.Fecha_Factura,PF.CAI,Concat(C.Nombre_Cliente,' ',C.Apellido_Cliente)AS NombreC,E.NombreE, TP.Tipo_Pago, F.Hora, C.RTN\n"
                    + "from Factura as F\n"
                    + "Inner Join Cliente as C on F.Id_Cliente=C.Id_Cliente\n"
                    + "Inner Join Parametro_Factura as PF ON F.Id_Parametro=PF.Id_Parametro_Factura\n"
                    + "Inner Join Tipo_Pago AS TP ON F.Id_Tipo_Pago=TP.Id_Tipo_Pago\n"
                    + "Inner Join Empleados as E ON F.Id_Empleado =E.Id_Empleado\n"
                    + "Where F.Id_Factura=?\n"
                    + "Order by F.Id_Factura");
            ps.setInt(1, Id);
            rs = ps.executeQuery();
            while (rs.next()) {
                NFACT.setText(rs.getString("Num_Factura"));
                SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
                emision.setText(formatter.format(rs.getDate("Fecha_Factura")));

                SimpleDateFormat hora = new SimpleDateFormat("HH:mm:ss");
                CAI.setText(rs.getString("CAI"));
                Cliente.setText(rs.getString("NombreC"));
                Vendedor.setText(rs.getString("NombreE"));
                TipoPago.setText(rs.getString("Tipo_Pago"));
                Hora.setText(hora.format(rs.getTime("Hora")));
                RTN.setText(rs.getString("RTN"));
            }
            cargarcampose();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void cargarcampose() {
        String id = CAI.getText();
        try {

            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select PF.Rango_Inicial, Concat('al ',PF.Rango_Final) AS Rango, PF.Fecha_Final, Concat('Direcci√≥n: ',S.Direccion,', ',S.Ciudad)AS Direccion, CONCAT('Tel√©fono: ',S.Telefono) AS Telefono\n"
                    + "From Parametro_Factura as PF\n"
                    + "Inner Join Sucursal as S ON PF.IdSucursal=S.Id_Sucursal\n"
                    + "Where PF.CAI=?");
            ps.setString(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                RANGO1.setText(rs.getString("Rango_Inicial"));
                RANGO.setText(rs.getString("Rango"));
                Direccion.setText(rs.getString("Direccion"));
                LIMITE.setText(rs.getString("Fecha_Final"));
                telefono.setText(rs.getString("Telefono"));
            }
            cargartabla();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }

    public void ObtenerTotales() {
        try {
            ResultSet rs;
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement(" Select Sum(F.Precio_Unitario*F.Cantidad) AS SUBTOTAL, Sum(F.Impuesto) as Impuesto, Sum(f.Descuento) as Descuento, (Sum(F.Precio_Unitario*F.Cantidad)  - Sum(f.Descuento))+Sum(F.Impuesto) as Total\n"
                    + "        From DetalleFactura as F \n"
                    + "      where F.Id_Factura=?");
            ps.setInt(1, Id);
            rs = ps.executeQuery();
            while (rs.next()) {
                subtotal.setText("L. " + new DecimalFormat("####.00").format(Double.parseDouble(rs.getString("SUBTOTAL"))));
                descuento = Double.parseDouble(rs.getString("Descuento"));
                System.out.println(descuento);
                //txtDescP.setText(new DecimalFormat("####.##").format(Double.parseDouble(rs.getString("Descuento"))));
                ISV.setText("L. " + new DecimalFormat("####.00").format(Double.parseDouble(rs.getString("Impuesto"))));
                total = Double.parseDouble(rs.getString("Total"));
                System.out.println(total);
                //txtTotalaPagarP.setText(new DecimalFormat("####.##").format(Double.parseDouble(rs.getString("Total"))));
            }

            con.close();
            rs.close();

            //System.out.println(factura + " " + idcai);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void ObtenerDescuento() {
        try {
            ResultSet rs;
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement(" Select sum(Valor) as Descuento From Descuento_Factura Where Id_Factura=?");
            ps.setInt(1, Id);
            rs = ps.executeQuery();
            while (rs.next()) {
                descuentito = Double.parseDouble(rs.getString("Descuento"));
                System.out.println(descuentito);
                //txtTotalaPagarP.setText(new DecimalFormat("####.##").format(Double.parseDouble(rs.getString("Total"))));
            }

            con.close();
            rs.close();

            //System.out.println(factura + " " + idcai);
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void imprimir() {
        int decision = JOptionPane.showConfirmDialog(null, "¬øDesea imprimir la factura de la venta?", "Pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (decision == 0) {
            PrinterJob job = PrinterJob.getPrinterJob();
            job.setJobName("Factura");

            job.setPrintable(new Printable() {
                public int print(Graphics pg, PageFormat pf, int pageNum) {

                    if (pageNum > 0) {
                        return Printable.NO_SUCH_PAGE;
                    }

                    Graphics2D g2 = (Graphics2D) pg;
                    g2.translate(pf.getImageableX(), pf.getImageableY());
                    g2.scale(0.75, 0.65);

                    jPanel1.paint(g2);
                    return Printable.PAGE_EXISTS;
                }
            });
            boolean ok = job.printDialog();
            if (ok) {
                try {
                    job.print();
                } catch (PrinterException ex) {
                }
            }
        }
    }
}
