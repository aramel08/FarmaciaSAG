/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios_SAG;

import Conexion.Conexion;
import static Formularios_SAG.Empleados.Id_emp;
import Logs.log;
import Reportes.ReportView;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;

/**
 *
 * @author Allisson Castro
 */
public class Proveedores extends javax.swing.JFrame {

    log lo = new log();
    String proveedores = "Proveedores";

    public static String Id_Proveedor = "0";

    public Proveedores() {
        initComponents();
        cargartabla();
        Inhabillitar();
        txtId_Proveedor.setVisible(Boolean.FALSE);
        usuario.setText(Login.txtUsuario.getText());

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("componentes/LOGOSAG(2).png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupProveedor = new javax.swing.ButtonGroup();
        BotonRegresarPro = new javax.swing.JLabel();
        BotonAgregarPro = new javax.swing.JLabel();
        BotonEditarPro = new javax.swing.JLabel();
        BotonContactoPro = new javax.swing.JLabel();
        BotonGuardarPro = new javax.swing.JLabel();
        BotonCancelarPro = new javax.swing.JLabel();
        txtNombreEmpresaPro = new javax.swing.JTextField();
        txtRTNPro = new javax.swing.JTextField();
        ComboCiudadPro = new javax.swing.JComboBox<>();
        txtDireccionPro = new javax.swing.JTextField();
        txtTelefonoPro = new javax.swing.JTextField();
        txtBuscarPro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProveedor = new javax.swing.JTable();
        BotonActivoPro = new javax.swing.JRadioButton();
        BotonInactivoPro = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        txtId_Proveedor = new javax.swing.JLabel();
        usuario = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BotonProducto_Proveedor = new javax.swing.JLabel();
        Proveedores = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BotonRegresarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonRegresarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonRegresarProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonRegresarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 120, 40));

        BotonAgregarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonAgregarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonAgregarProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonAgregarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 120, 40));

        BotonEditarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonEditarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonEditarProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonEditarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 120, 40));

        BotonContactoPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonContactoPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonContactoProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonContactoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 120, 40));

        BotonGuardarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonGuardarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonGuardarProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonGuardarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 620, 90, 40));

        BotonCancelarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonCancelarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonCancelarProMouseClicked(evt);
            }
        });
        getContentPane().add(BotonCancelarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 630, 80, 30));

        txtNombreEmpresaPro.setBackground(new java.awt.Color(240, 240, 240));
        txtNombreEmpresaPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtNombreEmpresaPro.setForeground(new java.awt.Color(153, 153, 153));
        txtNombreEmpresaPro.setText("Ingrese Nombre de la Empresa");
        txtNombreEmpresaPro.setBorder(null);
        txtNombreEmpresaPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtNombreEmpresaPro.setOpaque(false);
        txtNombreEmpresaPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNombreEmpresaProFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreEmpresaProFocusLost(evt);
            }
        });
        txtNombreEmpresaPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtNombreEmpresaProMousePressed(evt);
            }
        });
        txtNombreEmpresaPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEmpresaProActionPerformed(evt);
            }
        });
        txtNombreEmpresaPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreEmpresaProKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreEmpresaProKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombreEmpresaPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 180, 25));

        txtRTNPro.setBackground(new java.awt.Color(240, 240, 240));
        txtRTNPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtRTNPro.setForeground(new java.awt.Color(153, 153, 153));
        txtRTNPro.setText("Ingrese RTN");
        txtRTNPro.setBorder(null);
        txtRTNPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtRTNPro.setOpaque(false);
        txtRTNPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRTNProFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRTNProFocusLost(evt);
            }
        });
        txtRTNPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtRTNProMousePressed(evt);
            }
        });
        txtRTNPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRTNProActionPerformed(evt);
            }
        });
        txtRTNPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRTNProKeyTyped(evt);
            }
        });
        getContentPane().add(txtRTNPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 180, 30));

        ComboCiudadPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        ComboCiudadPro.setForeground(new java.awt.Color(153, 153, 153));
        ComboCiudadPro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione  Ciudad", "Tegucigalpa", "San Pedro Sula" }));
        ComboCiudadPro.setBorder(null);
        ComboCiudadPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ComboCiudadPro.setOpaque(false);
        getContentPane().add(ComboCiudadPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 435, 190, 30));

        txtDireccionPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtDireccionPro.setForeground(new java.awt.Color(153, 153, 153));
        txtDireccionPro.setText("Ingrese Dirección");
        txtDireccionPro.setBorder(null);
        txtDireccionPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDireccionPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDireccionProFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionProFocusLost(evt);
            }
        });
        txtDireccionPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDireccionProMousePressed(evt);
            }
        });
        txtDireccionPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionProActionPerformed(evt);
            }
        });
        txtDireccionPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionProKeyTyped(evt);
            }
        });
        getContentPane().add(txtDireccionPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 180, 25));

        txtTelefonoPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtTelefonoPro.setForeground(new java.awt.Color(153, 153, 153));
        txtTelefonoPro.setText("Ingrese Teléfono");
        txtTelefonoPro.setBorder(null);
        txtTelefonoPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtTelefonoPro.setOpaque(false);
        txtTelefonoPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTelefonoProFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoProFocusLost(evt);
            }
        });
        txtTelefonoPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTelefonoProMousePressed(evt);
            }
        });
        txtTelefonoPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoProActionPerformed(evt);
            }
        });
        txtTelefonoPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoProKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefonoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 560, 180, 30));

        txtBuscarPro.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        txtBuscarPro.setForeground(new java.awt.Color(153, 153, 153));
        txtBuscarPro.setText("Buscar Por ID,Nombre y RTN");
        txtBuscarPro.setBorder(null);
        txtBuscarPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtBuscarPro.setOpaque(false);
        txtBuscarPro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBuscarProFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarProFocusLost(evt);
            }
        });
        txtBuscarPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBuscarProMouseClicked(evt);
            }
        });
        txtBuscarPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarProActionPerformed(evt);
            }
        });
        txtBuscarPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarProKeyTyped(evt);
            }
        });
        getContentPane().add(txtBuscarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 224, 230, 30));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 60, 10));

        TablaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre Empresa", "RTN", "Ciudad", "Dirección", "Teléfono", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaProveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TablaProveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProveedorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaProveedor);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 630, 340));

        btnGroupProveedor.add(BotonActivoPro);
        BotonActivoPro.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        BotonActivoPro.setForeground(new java.awt.Color(255, 255, 255));
        BotonActivoPro.setText("Activo");
        BotonActivoPro.setOpaque(false);
        BotonActivoPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActivoProActionPerformed(evt);
            }
        });
        getContentPane().add(BotonActivoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, -1, -1));

        btnGroupProveedor.add(BotonInactivoPro);
        BotonInactivoPro.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        BotonInactivoPro.setForeground(new java.awt.Color(255, 255, 255));
        BotonInactivoPro.setText("Inactivo");
        BotonInactivoPro.setOpaque(false);
        BotonInactivoPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInactivoProActionPerformed(evt);
            }
        });
        getContentPane().add(BotonInactivoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, -1, -1));

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/analitica.png"))); // NOI18N
        jLabel2.setText("REPORTE");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 50, 120, 40));

        txtId_Proveedor.setEnabled(false);
        getContentPane().add(txtId_Proveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 80, 40));

        usuario.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        usuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(usuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 630, 230, 20));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Usuario");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 650, 70, -1));

        BotonProducto_Proveedor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonProducto_Proveedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonProducto_ProveedorMouseClicked(evt);
            }
        });
        getContentPane().add(BotonProducto_Proveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, 120, 40));

        Proveedores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/componentes/Pantalla Proveedores(1).png"))); // NOI18N
        Proveedores.setText("jLabel1");
        Proveedores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(Proveedores, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 951, 689));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreEmpresaProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEmpresaProActionPerformed

    private void txtRTNProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRTNProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRTNProActionPerformed

    private void txtBuscarProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarProActionPerformed

    private void BotonRegresarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonRegresarProMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
        this.dispose();


    }//GEN-LAST:event_BotonRegresarProMouseClicked
    public boolean verificarDatosExistentes(String campo, String columna, String tabla, String mensaje) {
        Conexion cc = new Conexion();
        Connection cn = cc.getConexion();
        boolean resultado = true;
        String verificar = "Verificar";
        String sql = "SELECT " + columna + " FROM " + tabla + " WHERE " + columna + " = '" + campo + "'";

        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            if (rs.next()) {
                if (rs.getString(columna).equals(campo)) {
                    JOptionPane.showMessageDialog(null, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
                    resultado = false;
                }
            }
        } catch (Exception e) {
            lo.LogBitacora("Error: No se pudo verificar el dato " + "Excepción: " + e + ". Origen: " + this.getClass().getSimpleName(), proveedores, verificar);
            JOptionPane.showMessageDialog(null, "No se pudo verificar\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        return resultado;
    }

    private void BotonAgregarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonAgregarProMouseClicked
        Habilitar();
        BotonGuardarPro.isEnabled();
        BotonCancelarPro.isEnabled();
    }//GEN-LAST:event_BotonAgregarProMouseClicked

    private void BotonGuardarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonGuardarProMouseClicked
        String guardar = "BtnGuardar";
        if (txtNombreEmpresaPro.getText().equals("Ingrese Nombre de la Empresa")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre de Empresa", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else if (txtRTNPro.getText().equals("Ingrese RTN")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un RTN", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else if (ComboCiudadPro.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione una ciudad", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else if (txtDireccionPro.getText().equals("Ingrese Dirección") || (txtDireccionPro.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Debe ingresar una direccion", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else if (txtTelefonoPro.getText().equals("Ingrese Teléfono")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un telefono", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            String NombreEm = txtNombreEmpresaPro.getText();
            String RTN = txtRTNPro.getText();
            String Ciudad = ComboCiudadPro.getSelectedItem().toString();
            String Direccion = txtDireccionPro.getText();
            String Telefono = txtTelefonoPro.getText();

            try {
                Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement("Insert into Proveedor (Nombre_Empresa, RTN,Ciudad,Direccion, Telefono,Id_Estado) VALUES(?,?,?,?,?,?)");
                ps.setString(1, NombreEm);
                ps.setString(2, RTN);
                ps.setString(3, Ciudad);
                ps.setString(4, Direccion);
                ps.setString(5, Telefono);
                ps.setInt(6, 1);
                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Registro guardado");
                cargartabla();
                Limpiar();
                Inhabillitar();

            } catch (SQLException ex) {
                lo.LogBitacora("Error: No se pudo guardar el dato " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, guardar);
                JOptionPane.showMessageDialog(null, ex.toString());
            }
        }

    }//GEN-LAST:event_BotonGuardarProMouseClicked

    private void TablaProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProveedorMouseClicked
        String tablap = "TablaProveedores";
        try {
            int fila = TablaProveedor.getSelectedRow();
            int id = Integer.parseInt(TablaProveedor.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select P.Id_Proveedor,P.Nombre_Empresa,P.RTN,P.Ciudad,P.Direccion,P.Telefono,P.Id_Estado\n"
                    + "From Proveedor as P\n"
                    + "INNER JOIN Estado AS E ON E.Id_Estado = P.Id_Estado\n"
                    + "where P.Id_Proveedor=?\n"
                    + "Order By P.Id_Proveedor");
            ps.setInt(1, id);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtId_Proveedor.setText(String.valueOf(id));
                txtNombreEmpresaPro.setText(rs.getString("Nombre_Empresa"));
                txtRTNPro.setText(rs.getString("RTN"));
                ComboCiudadPro.setSelectedItem(rs.getString("Ciudad"));
                txtDireccionPro.setText(rs.getString("Direccion"));
                txtTelefonoPro.setText(rs.getString("Telefono"));

                if (rs.getString("Id_Estado").equals("1")) {
                    BotonActivoPro.setSelected(true);
                } else if (rs.getString("Id_Estado").equals("2")) {
                    BotonInactivoPro.setSelected(true);

                }
                Id_Proveedor = txtId_Proveedor.getText();

                BotonActivoPro.setVisible(Boolean.TRUE);
                BotonInactivoPro.setVisible(Boolean.TRUE);
                //id = txtId_Proveedor.getText();
                Habilitar();
            }
        } catch (SQLException ex) {
            lo.LogBitacora("Error: No se pudo seleccionar la tabla" + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, tablap);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_TablaProveedorMouseClicked

    private void BotonEditarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonEditarProMouseClicked
        String editar = "BtnEditar";
        if (txtNombreEmpresaPro.getText().equals("Ingrese Nombre de la Empresa") || txtRTNPro.getText().equals("Ingrese RTN") || ComboCiudadPro.equals("Seleccione Ciudad") || txtDireccionPro.getText().equals("Ingrese Dirección") || txtTelefonoPro.getText().equals("Ingrese Teléfono")) {
            JOptionPane.showMessageDialog(null, "No se puede Guardar datos vacios");
        } else {
            int IdProveedor = Integer.parseInt(txtId_Proveedor.getText());
            String NombreEmpresa = txtNombreEmpresaPro.getText();
            String RTN = txtRTNPro.getText();
            String Ciudad = ComboCiudadPro.getSelectedItem().toString();
            String Direccion = txtDireccionPro.getText();
            String Telefono = txtTelefonoPro.getText();

            try {
                Connection con = Conexion.getConexion();
                PreparedStatement ps = con.prepareStatement("Update Proveedor set Nombre_Empresa=?, RTN=?,Ciudad=?,Direccion=?,Telefono=? Where Id_Proveedor=?");
                ps.setString(1, NombreEmpresa);
                ps.setString(2, RTN);
                ps.setString(3, Ciudad);
                ps.setString(4, Direccion);
                ps.setString(5, Telefono);
                ps.setInt(6, IdProveedor);

                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Registro Actualizado");

                cargartabla();
                Limpiar();
                Inhabillitar();

            } catch (SQLException ex) {
                lo.LogBitacora("Error: No se pudo editar el dato " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, editar);
                JOptionPane.showMessageDialog(null, ex.toString());
            }
        }
    }//GEN-LAST:event_BotonEditarProMouseClicked

    private void BotonCancelarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonCancelarProMouseClicked
        Limpiar();
        Inhabillitar();
        BotonEditarPro.setEnabled(Boolean.FALSE);
        BotonGuardarPro.setEnabled(Boolean.FALSE);

    }//GEN-LAST:event_BotonCancelarProMouseClicked

    private void txtBuscarProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBuscarProMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarProMouseClicked

    private void BotonActivoProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActivoProActionPerformed

        String IdEmpleado = txtId_Proveedor.getText();
        String activo = "Activo";
        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Proveedor set Id_Estado=? Where Id_Proveedor=?");
            ps.setInt(1, 1);
            ps.setString(2, IdEmpleado);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Habilitado");
            cargartabla();
            BotonActivoPro.setVisible(Boolean.FALSE);
            BotonInactivoPro.setVisible(Boolean.FALSE);
            Limpiar();
            Inhabillitar();

        } catch (SQLException ex) {
            lo.LogBitacora("Error: No se pudo actualizar el dato " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, activo);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_BotonActivoProActionPerformed

    private void BotonInactivoProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInactivoProActionPerformed

        String IdEmpleado = txtId_Proveedor.getText();
        String inactivo = "Inactivo";

        try {
            Connection con = Conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("Update Proveedor set Id_Estado=? Where Id_Proveedor=?");
            ps.setInt(1, 2);
            ps.setString(2, IdEmpleado);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro Inhabilitado");
            cargartabla();
            BotonActivoPro.setVisible(Boolean.FALSE);
            BotonInactivoPro.setVisible(Boolean.FALSE);
            Limpiar();
            Inhabillitar();

        } catch (SQLException ex) {
            lo.LogBitacora("Error: No se pudo actualizar el dato " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, inactivo);
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    }//GEN-LAST:event_BotonInactivoProActionPerformed

    private void txtBuscarProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarProKeyTyped
        buscarData(txtBuscarPro.getText());
        validarNumerosLetras(evt);
        if (txtBuscarPro.getText().length() > 15) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el máximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtBuscarPro.getText().length() > 0) {
            if (!txtBuscarPro.getText().matches("^(?!.*([A-Za-zñÑáéíóúÁÉÍÓÚ\\s])\\1{2})[A-Za-zñÑáéíóúÁÉÍÓÚ\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Advertencia", JOptionPane.WARNING_MESSAGE);
                evt.consume();

            }
        }
    }//GEN-LAST:event_txtBuscarProKeyTyped

    private void txtNombreEmpresaProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProFocusGained
        if (txtNombreEmpresaPro.getText().equals("Ingrese Nombre de la Empresa")) {
            txtNombreEmpresaPro.setText("");
            txtNombreEmpresaPro.setForeground(new Color(0, 0, 0));
        }

    }//GEN-LAST:event_txtNombreEmpresaProFocusGained

    private void txtNombreEmpresaProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProFocusLost
        if (txtNombreEmpresaPro.getText().equals("")) {
            txtNombreEmpresaPro.setText("Ingrese Nombre de la Empresa");
            txtNombreEmpresaPro.setForeground(new Color(153, 153, 153));
        } else if (txtNombreEmpresaPro.getText().length() < 10) {
            JOptionPane.showMessageDialog(null, "El nombre debe tener al menos 10 caracteres", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }


    }//GEN-LAST:event_txtNombreEmpresaProFocusLost

    private void txtRTNProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRTNProFocusGained
        if (txtRTNPro.getText().equals("Ingrese RTN")) {
            txtRTNPro.setText("");
            txtRTNPro.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtRTNProFocusGained

    private void txtRTNProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRTNProFocusLost
        if (txtRTNPro.getText().equals("")) {
            txtRTNPro.setText("Ingrese RTN");
            txtRTNPro.setForeground(new Color(153, 153, 153));
        } else if (txtRTNPro.getText().length() < 14) {
            JOptionPane.showMessageDialog(null, "El documento RTN debe contener 14 dígitos", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
        if (!txtRTNPro.getText().matches("(^[0]{1}[0-9]{13}$)|(^[1]{1}[0-9]{13}$)")) {
            JOptionPane.showMessageDialog(null, "El número de RTN debe comenzar en 0 o en 1", "Advertencia", JOptionPane.WARNING_MESSAGE);
            /* txtRTNPro.setText("");
            if (txtRTNPro.getText().equals("")) {
                txtRTNPro.setText("Ingrese RTN");
                txtRTNPro.setForeground(new Color(153, 153, 153));
            }*/
        } else {
            verificarDatosExistentes(txtRTNPro.getText(), "RTN", "Proveedor", "No puedes utilizar el RTN de otro Proveedor");
            /*txtRTNPro.setText("");
            if (txtRTNPro.getText().equals("")) {
                txtRTNPro.setText("Ingrese RTN");
                txtRTNPro.setForeground(new Color(153, 153, 153));
            }*/
        }


    }//GEN-LAST:event_txtRTNProFocusLost

    private void txtDireccionProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionProFocusGained
        if (txtDireccionPro.getText().equals("Ingrese Dirección")) {
            txtDireccionPro.setText("");
            txtDireccionPro.setForeground(new Color(0, 0, 0));
        }

    }//GEN-LAST:event_txtDireccionProFocusGained

    private void txtDireccionProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionProActionPerformed

    }//GEN-LAST:event_txtDireccionProActionPerformed

    private void txtDireccionProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionProFocusLost
        if (txtDireccionPro.getText().equals("")) {
            txtDireccionPro.setText("Ingrese Dirección");
            txtDireccionPro.setForeground(new Color(153, 153, 153));
        }

        if (txtDireccionPro.getText().length() < 10) {
            JOptionPane.showMessageDialog(null, "La dirección debe contener al menos 10 caracteres", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtDireccionProFocusLost

    private void txtTelefonoProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoProFocusGained
        if (txtTelefonoPro.getText().equals("Ingrese Teléfono")) {
            txtTelefonoPro.setText("");
            txtTelefonoPro.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtTelefonoProFocusGained

    private void txtTelefonoProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoProFocusLost
        if (txtTelefonoPro.getText().equals("")) {
            txtTelefonoPro.setText("Ingrese Teléfono");
            txtTelefonoPro.setForeground(new Color(153, 153, 153));
        } else if (txtTelefonoPro.getText().length() < 8) {
            JOptionPane.showMessageDialog(null, "El número de teléfono debe contener 8 dígitos", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!txtTelefonoPro.getText().matches("(^[9]{1}[0-9]{7}$)|(^[3]{1}[0-9]{7}$)|(^[7]{1}[0-9]{7}$)")) {
            JOptionPane.showMessageDialog(null, "El número de celular debe comenzar en 9, 3, 7 o 8", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            verificarDatosExistentes(txtTelefonoPro.getText(), "Telefono", "Proveedor", "El  número de telefono ya existe");
        }
    }//GEN-LAST:event_txtTelefonoProFocusLost

    private void txtBuscarProFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarProFocusGained
        if (txtBuscarPro.getText().equals("Buscar Por ID,Nombre y RTN")) {
            txtBuscarPro.setText("");
            txtBuscarPro.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txtBuscarProFocusGained

    private void txtBuscarProFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarProFocusLost
        if (txtBuscarPro.getText().equals("")) {
            txtBuscarPro.setText("Buscar Por ID,Nombre y RTN");
            txtBuscarPro.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtBuscarProFocusLost

    private void txtNombreEmpresaProKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProKeyPressed
        if (txtNombreEmpresaPro.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtNombreEmpresaProKeyPressed

    private void txtRTNProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRTNProKeyTyped
        validarNumeros(evt);
        if (txtRTNPro.getText().length() > 13) {
            evt.consume();
        }
    }//GEN-LAST:event_txtRTNProKeyTyped

    private void txtNombreEmpresaProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProKeyTyped
        if (txtNombreEmpresaPro.getText().length() > 30) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el máximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtNombreEmpresaPro.getText().length() > 0) {
            if (!txtNombreEmpresaPro.getText().matches("^(?!.*([A-Za-zñÑáéíóúÁÉÍÓÚ\\s])\\1{2})[A-Za-zñÑáéíóúÁÉÍÓÚ\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtNombreEmpresaProKeyTyped

    private void txtDireccionProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionProKeyTyped
        if (txtDireccionPro.getText().length() > 25) {
            JOptionPane.showMessageDialog(null, "Alcanzaste el máximo de caracteres para este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            evt.consume();
        } else if (txtDireccionPro.getText().length() > 0) {
            if (!txtDireccionPro.getText().matches("^(?!.*([A-Za-zñÑáéíóúÁÉÍÓÚ\\s])\\1{2})[A-Za-zñÑáéíóúÁÉÍÓÚ\\s0-9]+$")) {
                JOptionPane.showMessageDialog(null, "No repitas caracteres de forma incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtDireccionProKeyTyped

    private void txtTelefonoProKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoProKeyTyped
        validarNumeros(evt);
        if (txtTelefonoPro.getText().length() > 7) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoProKeyTyped

    private void txtNombreEmpresaProMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreEmpresaProMousePressed
        if (txtNombreEmpresaPro.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtNombreEmpresaProMousePressed

    private void txtRTNProMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRTNProMousePressed
        if (txtRTNPro.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtRTNProMousePressed

    private void txtDireccionProMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDireccionProMousePressed
        if (txtDireccionPro.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtDireccionProMousePressed

    private void txtTelefonoProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoProActionPerformed

    private void txtTelefonoProMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTelefonoProMousePressed
        if (txtTelefonoPro.isEnabled() == false) {

            JOptionPane.showMessageDialog(null, "Dar Click en Agregar o Editar para utilizar el campo", "Advertencia", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_txtTelefonoProMousePressed

    private void BotonProducto_ProveedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonProducto_ProveedorMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Producto_Proveedor().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_BotonProducto_ProveedorMouseClicked

    private void BotonContactoProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonContactoProMouseClicked
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Contacto_Proveedor().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_BotonContactoProMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        JasperReport reporte;
        HashMap hm = new HashMap();
        hm.put("Usuario", usuario.getText());
        try {
            Connection con = Conexion.getConexion();
            reporte = JasperCompileManager.compileReport("src/Reportes/ReporteProveedores.jrxml");
            JasperPrint jp = JasperFillManager.fillReport(reporte, hm, con);
            //JasperViewer.viewReport(jp,true);
            ReportView view = new ReportView(jp, false);
            view.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proveedores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BotonActivoPro;
    private javax.swing.JLabel BotonAgregarPro;
    private javax.swing.JLabel BotonCancelarPro;
    private javax.swing.JLabel BotonContactoPro;
    private javax.swing.JLabel BotonEditarPro;
    private javax.swing.JLabel BotonGuardarPro;
    private javax.swing.JRadioButton BotonInactivoPro;
    private javax.swing.JLabel BotonProducto_Proveedor;
    private javax.swing.JLabel BotonRegresarPro;
    private javax.swing.JComboBox<String> ComboCiudadPro;
    private javax.swing.JLabel Proveedores;
    private javax.swing.JTable TablaProveedor;
    private javax.swing.ButtonGroup btnGroupProveedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscarPro;
    private javax.swing.JTextField txtDireccionPro;
    private javax.swing.JLabel txtId_Proveedor;
    private javax.swing.JTextField txtNombreEmpresaPro;
    private javax.swing.JTextField txtRTNPro;
    private javax.swing.JTextField txtTelefonoPro;
    private javax.swing.JLabel usuario;
    // End of variables declaration//GEN-END:variables

    private void Habilitar() {
        txtNombreEmpresaPro.enable(Boolean.TRUE);
        txtRTNPro.enable(Boolean.TRUE);
        ComboCiudadPro.enable(Boolean.TRUE);
        txtDireccionPro.enable(Boolean.TRUE);
        txtTelefonoPro.enable(Boolean.TRUE);

    }

    private void cargartabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) TablaProveedor.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        String cargart="CargarTabla";

        try {
            Connection con = Conexion.getConexion();
            ps = con.prepareStatement("Select P.Id_Proveedor,P.Nombre_Empresa,P.RTN,P.Ciudad,P.Direccion,P.Telefono,E.Estado\n"
                    + "From Proveedor as P\n"
                    + "INNER JOIN Estado AS E ON E.Id_Estado = P.Id_Estado\n"
                    + "Order By P.Id_Proveedor");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[columnas];
                for (int indice = 0; indice < columnas; indice++) {
                    fila[indice] = rs.getObject(indice + 1);
                }
                modeloTabla.addRow(fila);
            }

        } catch (SQLException ex) {
            lo.LogBitacora("Error: No se pudo cargar la tabla " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, cargart);
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }

    private void Limpiar() {
        txtNombreEmpresaPro.setText("");
        if (txtNombreEmpresaPro.getText().equals("")) {
            txtNombreEmpresaPro.setText("Ingrese Nombre de la Empresa");
            txtNombreEmpresaPro.setForeground(new Color(153, 153, 153));
        }
        txtRTNPro.setText("");
        if (txtRTNPro.getText().equals("")) {
            txtRTNPro.setText("Ingrese RTN");
            txtRTNPro.setForeground(new Color(153, 153, 153));
        }
        txtDireccionPro.setText("");
        if (txtDireccionPro.getText().equals("")) {
            txtDireccionPro.setText("Ingrese Dirección");
            txtDireccionPro.setForeground(new Color(153, 153, 153));

        }
        txtTelefonoPro.setText("");
        if (txtTelefonoPro.getText().equals("")) {
            txtTelefonoPro.setText("Ingrese Teléfono");
            txtTelefonoPro.setForeground(new Color(153, 153, 153));
        }

        ComboCiudadPro.setSelectedIndex(0);

    }

    private void Inhabillitar() {

        txtNombreEmpresaPro.enable(Boolean.FALSE);
        txtRTNPro.enable(Boolean.FALSE);
        ComboCiudadPro.enable(Boolean.FALSE);
        txtDireccionPro.enable(Boolean.FALSE);
        txtTelefonoPro.enable(Boolean.FALSE);

    }

    private void buscarData(String valor) {
        String buscar ="Buscar";
        String[] titulos = {"ID", "Nombre Empresa", "RTN", "Ciudad", "Direccion", "Telefono", "Estado"};
        String[] registros = new String[13];
        String sql = "Select P.Id_Proveedor,P.Nombre_Empresa,P.RTN,P.Ciudad,P.Direccion,P.Telefono,E.Estado\n"
                + "From Proveedor as P\n"
                + "INNER JOIN Estado AS E ON E.Id_Estado = P.Id_Estado\n"
                + "WHERE CONCAT (P.Id_Proveedor, ' ', P.Nombre_Empresa, ' ', P.RTN) LIKE '%" + valor + "%'\n"
                + "ORDER BY P.Id_Proveedor";

        DefaultTableModel model = new DefaultTableModel(null, titulos);
        Connection con = Conexion.getConexion();

        try {

            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                registros[0] = rs.getString("Id_Proveedor");
                registros[1] = rs.getString("Nombre_Empresa");
                registros[2] = rs.getString("RTN");
                registros[3] = rs.getString("Ciudad");
                registros[4] = rs.getString("Direccion");
                registros[5] = rs.getString("Telefono");
                registros[6] = rs.getString("Estado");
                model.addRow(registros);
            }

            TablaProveedor.setModel(model);
            // anchoColumnas();
        } catch (SQLException ex) {
            lo.LogBitacora("Error: No se pudo buscar el dato " + "Excepción: " + ex + ". Origen: " + this.getClass().getSimpleName(), proveedores, buscar);
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void validarNumerosLetras(KeyEvent e) {
        if (e.getKeyChar() >= 33 && e.getKeyChar() <= 47
                || e.getKeyChar() >= 58 && e.getKeyChar() <= 64
                || e.getKeyChar() >= 91 && e.getKeyChar() <= 96
                || e.getKeyChar() >= 123 && e.getKeyChar() <= 129
                || e.getKeyChar() >= 145 && e.getKeyChar() <= 159
                || e.getKeyChar() >= 164 && e.getKeyChar() <= 238) {

            e.consume();
            JOptionPane.showMessageDialog(null, "Este campo no acepta caracteres especiales", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void validarNumeros(KeyEvent e) {
        if (e.getKeyChar() >= 33 && e.getKeyChar() <= 47
                || e.getKeyChar() >= 58 && e.getKeyChar() <= 238) {
            e.consume();
            JOptionPane.showMessageDialog(null, "Este campo solo admite números", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public boolean validarNumCelular(String cadena) {
        String patron = "^[23789]\\d{7}$";
        Pattern patt = Pattern.compile(patron);
        Matcher comparador = patt.matcher(cadena);
        if (comparador.matches()) {
            return true;
        } else {
            return false;
        }

    }
}
